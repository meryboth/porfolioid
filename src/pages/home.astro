---
import Htmlbody from "../components/htmlbody.astro";
import Blog from "../components/cards/blog.astro";
import Portfolio from "../components/portfolio/Portfolio.astro";
import Footer from "../components/footer/Footer.astro";
import { databaseId, notion } from "../lib/common_var";
import Header from "../components/header/Header.astro";
import Hero from "../components/hero/Hero.astro";
import Carrousel from "../components/carrousel/Carrousel.astro";
import Services from "../components/services/Services.astro";
import Skills from "../components/skills/Skills.astro";
import Roadmap from "../components/roadmap/Roadmap.astro";

const response = await notion.databases.query({
  database_id: databaseId,
  sorts: [
    {
      property: "Created",
      direction: "ascending",
    },
  ],
});
const limitedResults = response.results.slice(0, 5);

/* Variable donde se van a guardar los posteos */
const posts = [];

/* Descarga de imÃ¡genes */

limitedResults.forEach((post) => {
  // cover: post.properties.Image.files[0]?.file.url,
  const imgName = post.properties.Title.title[0].plain_text
    .replace(/\s/g, "")
    .concat(".jpg");
  // save the new posts:
  posts.push({
    id: post.id,
    title: post.properties.Title.title[0].plain_text,
    slug: post.properties.Slug.formula.string,
    tags: post.properties.Tags.multi_select,
    intro: post.properties.Intro.rich_text[0].plain_text,
    cover: post.properties.Title.title[0].plain_text
      .replace(/\s/g, "")
      .concat(".jpg"),
  });
  console.log("Estos son los posteos guardados:", posts);
  // the cover image expires after 1 hour so we need to download it
  downloadImage(post.cover.file.url, `./public/images/${imgName}`);
});
async function downloadImage(url, filepath) {
  try {
    const response = await fetch(url);
    const reader = response.body.getReader();
    const writer = fs.createWriteStream(filepath);

    await new Promise((resolve, reject) => {
      let pump = () =>
        reader.read().then(({ done, value }) => {
          if (done) {
            resolve();
            return;
          }
          writer.write(value);
          pump();
        });
      pump();
    });

    console.log(filepath.split("/")[3] + " was downloaded successfully.");
  } catch (error) {
    console.error("Error downloading image:", error);
  }
}
---

<Htmlbody>
  <div class="main px-[100px]">
    <section class="h-full w-full" id="start">
      <Header />
      <Hero />
    </section>
    <Portfolio />

    <!--     <div id="projects">
      {
        limitedResults.map((page) =>
          "properties" in page &&
          "title" in page.properties.Title &&
          "multi_select" in page.properties.Tags &&
          "rich_text" in page.properties.Intro &&
          "formula" in page.properties.Slug &&
          "string" in page.properties.Slug.formula &&
          page.properties.Slug.formula.string != null &&
          (page.properties.Title.title.length &&
            page.properties.Tags.multi_select.length &&
            page.properties.Intro.rich_text.length) != 0 ? (
            <Blog
              title={page.properties.Title.title[0].plain_text}
              tags={page.properties.Tags.multi_select}
              intro={page.properties.Intro.rich_text[0].plain_text}
              slug={page.properties.Slug.formula.string}
              cover={page?.cover?.file?.url}
            />
          ) : (
            ""
          )
        )
      }
    </div> -->
    <div id="projects">
      {
        posts.map((page) => (
          <Blog
            title={page.title}
            tags={page.tags}
            intro={page.intro}
            slug={page.slug}
            cover={page?.cover}
          />
        ))
      }
    </div>

    <div class="flex flex-col justify-center items-center mt-[10vh]">
      <a
        href="/projects/"
        class="border w-[250px] rounded-full h-[44px] text-white flex flex-col justify-center items-center"
        >Ver proyectos</a
      >
    </div>
    <Services />
    <Skills />
    <Roadmap />
    <Carrousel />
    <Footer />
  </div>
</Htmlbody>

<style>
  .main {
    background-image: url("../images/background-intro.jpg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  a:hover {
    background-color: #fff;
    color: #000;
  }
</style>
