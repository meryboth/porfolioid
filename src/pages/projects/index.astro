---
import Htmlbody from "../../components/htmlbody.astro";
import { Icon } from "astro-icon/components";
import { databaseId, notion } from "../../lib/common_var";

const response = await notion.databases.query({
  database_id: databaseId,
  sorts: [
    {
      property: "Created",
      direction: "ascending",
    },
  ],
});
/* Variable donde se van a guardar los posteos */
const posts = [];
/* Descarga de imÃ¡genes */

response.results.forEach((post) => {
  // cover: post.properties.Image.files[0]?.file.url,
  const imgName = post.properties.Title.title[0].plain_text
    .replace(/\s/g, "")
    .concat(".jpg");
  // save the new posts:
  posts.push({
    id: post.id,
    title: post.properties.Title.title[0].plain_text,
    slug: post.properties.Slug.formula.string,
    cover: post.properties.Title.title[0].plain_text
      .replace(/\s/g, "")
      .concat(".jpg"),
  });
  console.log("Estos son los posteos guardados:", posts);
  // the cover image expires after 1 hour so we need to download it
  downloadImage(post.cover.file.url, `./public/images/${imgName}`);
});
async function downloadImage(url, filepath) {
  try {
    const response = await fetch(url);
    const reader = response.body.getReader();
    const writer = fs.createWriteStream(filepath);

    await new Promise((resolve, reject) => {
      let pump = () =>
        reader.read().then(({ done, value }) => {
          if (done) {
            resolve();
            return;
          }
          writer.write(value);
          pump();
        });
      pump();
    });

    console.log(filepath.split("/")[3] + " was downloaded successfully.");
  } catch (error) {
    console.error("Error downloading image:", error);
  }
}
---

<Htmlbody>
  <section class="h-[100vh] py-[50px] flex flex-col justify-between">
    <div class="flex flex-row justify-between items-center px-[100px]">
      <a href="/home/">
        <Icon name="arrowBack" width={150} height={150} />
      </a>
      <h1>/Proyectos</h1>
    </div>
    <div class="mx-[100px]">
      <swiper-container
        class="mySwiper"
        pagination="true"
        pagination-clickable="true"
        space-between="30"
        slides-per-view="3"
        style={{
          "--swiper-pagination-color": "#FFF",
          "--swiper-pagination-bullet-inactive-color": "#999999",
          "--swiper-pagination-bullet-inactive-opacity": "1",
          "--swiper-pagination-bullet-size": "4px",
          "--swiper-pagination-bullet-horizontal-gap": "6px",
          "--swiper-pagination-bottom": "auto",
        }}
      >
        <!--         {
          response.results.map((page) =>
            // Ensure that the page has properties
            "properties" in page &&
            // Ensure that the type exist in these properties
            "title" in page.properties.Title &&
            "multi_select" in page.properties.Tags &&
            "rich_text" in page.properties.Intro &&
            "formula" in page.properties.Slug &&
            "string" in page.properties.Slug.formula &&
            page.properties.Slug.formula.string != null &&
            // Ensure that the content is not empty
            (page.properties.Title.title.length &&
              page.properties.Tags.multi_select.length &&
              page.properties.Intro.rich_text.length) != 0 ? (
              <swiper-slide>
                <a
                  href={`/${page.properties.Slug.formula.string}/`}
                  class="w-full h-[400px] rounded-3xl  flex flex-col justify-end"
                  style={{
                    backgroundImage: `url('${page.cover?.file.url}')`,
                    backgroundSize: "cover",
                  }}
                >
                  <div class="card w-full h-full rounded-3xl">
                    <h4 class="text-slate-900">
                      {page.properties.Title.title[0].plain_text}
                    </h4>
                  </div>
                </a>
              </swiper-slide>
            ) : (
              ""
            )
          )
        } -->
        {
          posts.map((page) => (
            <swiper-slide>
              <a
                href={`/${page.slug}/`}
                class="w-full h-[400px] rounded-3xl  flex flex-col justify-end"
                style={{
                  backgroundImage: `url('/images/${page.cover}')`,
                  backgroundSize: "cover",
                }}
              >
                <div class="card w-full h-full rounded-3xl">
                  <h4 class="text-slate-900">{page.title}</h4>
                </div>
              </a>
            </swiper-slide>
          ))
        }
      </swiper-container>
    </div>
  </section>
</Htmlbody>

<script
  src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"
></script>

<style>
  section {
    background-image: url("../../images/background-intro2.jpg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .card {
    background: linear-gradient(to top, rgba(217, 216, 216, 0.85), transparent);
    position: relative;
  }

  h1 {
    font-weight: 100;
    font-size: 7rem;
  }

  h4 {
    font-weight: 300;
    font-size: 2rem;
    position: absolute;
    bottom: 10px;
    left: 30px;
  }
</style>
